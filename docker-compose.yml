networks:
  app_network:
    name: app_network

volumes:
  kafka_data:
  cassandra_data:  
  es_data:

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    networks:
      - app_network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    mem_limit: 2g
    cpus: 1.0   
    networks:
      - app_network
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.166:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ../../dependencies/kafka_2.13-3.9.0/config/server.properties:/etc/kafka/server.properties    
    depends_on:
      - zookeeper      

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app_network
  
  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"
    networks:
      - app_network
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M      

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - app_network
    depends_on:
      - prometheus      

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.1
    container_name: elasticsearch
    networks:
      - app_network
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node  # Required for non-clustered setups
      - ES_JAVA_OPTS=-Xms1g -Xmx1g  # Set JVM heap size to avoid memory issues
      - xpack.security.enabled=false  # (Optional) Disable security for easier setup/testing
      - xpack.security.http.ssl.enabled=false  # (Optional) Disable SSL for HTTP traffic
    ulimits:
      memlock:
        soft: -1
        hard: -1  # Prevent memory swapping issues
    volumes:
      - es_data:/usr/share/elasticsearch/data  # Persist data between restarts

  logstash:
    image: docker.elastic.co/logstash/logstash:8.16.1
    container_name: logstash
    networks:
      - app_network
    ports:
      - "5100:5100"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf

  kibana:
    image: docker.elastic.co/kibana/kibana:8.16.1
    container_name: kibana
    networks:
      - app_network
    ports:
      - "5601:5601"

  cassandra_db:
    image: cassandra:4.1
    container_name: cassandra
    mem_limit: 3g
    cpus: 2
    networks:
      - app_network
    ports:
      - "9042:9042" 
    environment:
      - CASSANDRA_CLUSTER_NAME=Sentiment_App
    volumes:
      - cassandra_data:/var/lib/cassandra
